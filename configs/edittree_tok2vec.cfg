[paths]
train = null
dev = null
raw = null

[system]
seed = 342
gpu_allocator = null

[nlp]
lang = "nl"
pipeline = ["tok2vec", "edit_tree_lemmatizer"]
disabled = []
before_creation = null
after_creation = null
after_pipeline_creation = null
tokenizer = {"@tokenizers":"spacy.Tokenizer.v1"}
batch_size = 1000

[components]

[components.tok2vec]
factory = "tok2vec"

[components.tok2vec.model]
@architectures = "spacy.Tok2Vec.v2"

[components.tok2vec.model.embed]
@architectures = "spacy.MultiHashEmbed.v2"
width = ${components.tok2vec.model.encode.width}
attrs = ["ORTH", "PREFIX", "SUFFIX", "SHAPE"]
rows = [5000, 5000, 5000, 2500]
include_static_vectors = true

[components.tok2vec.model.encode]
@architectures = "spacy.MaxoutWindowEncoder.v2"
width = 256
depth = 8
window_size = 1
maxout_pieces = 3


[components.edit_tree_lemmatizer]
factory = "edit_tree_lemmatizer"

[components.edit_tree_lemmatizer.model]
@architectures = "edit_tree_model.v1"
nO = null

[components.edit_tree_lemmatizer.model.tok2vec]
@architectures = "spacy.Tok2VecListener.v1"
width = ${components.tok2vec.model.encode.width}
upstream = "*"

[initialize]
vectors = "nl_core_news_lg"

[initialize.components]

[corpora]

[corpora.dev]
@readers = "spacy.Corpus.v1"
#@readers = "Gold_ents_Corpus.v1"
#file = ${paths.dev}
#gold_preproc = true

[corpora.train]
@readers = "spacy.Corpus.v1"
#@readers = "Gold_ents_Corpus.v1"
#file = ${paths.train}
#gold_preproc = true


[training]
seed = ${system.seed}
gpu_allocator = ${system.gpu_allocator}
dropout = 0.1
accumulate_gradient = 1
patience = 1600000
max_epochs = 0
max_steps = 10000
eval_frequency = 500
frozen_components = []
dev_corpus = "corpora.dev"
train_corpus = "corpora.train"
before_to_disk = null

[training.logger]
@loggers = "spacy.ConsoleLogger.v1"
progress_bar = true

[training.batcher]
@batchers = "spacy.batch_by_words.v1"
discard_oversize = false
tolerance = 0.2

[training.batcher.size]
@schedules = "compounding.v1"
start = 100
stop = 1000
compound = 1.001

[training.optimizer]
@optimizers = "Adam.v1"
beta1 = 0.9
beta2 = 0.999
L2_is_weight_decay = true
L2 = 0.01
grad_clip = 1.0
use_averages = false
eps = 0.00000001
learn_rate = 0.001

[training.score_weights]
lemma_acc = 1.0
